version: "3.8"
# Compose file build variables set in .env
services:
  supervisor:
    env_file:
      - .env
    build:
      context: ./build
      args:
        IMAGE_BASE: ${IMAGE_BASE:-ghcr.io/ai-dock/base-image:v2-cpu-22.04}
        SELKIES_VERSION: ${SELKIES_VERSION:-1.6.2}
#      tags:
#        - "ghcr.io/ai-dock/linux-desktop:${IMAGE_TAG:-v2-cuda-12.1.1-cudnn8-runtime-22.04}"
        
    image: docker-kde-plasma:${IMAGE_TAG:-v2-22.04}
    privileged: true
    container_name: kde
    
    shm_size: 2G
    
    ## For Nvidia GPU's - You probably want to uncomment this
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              count: all
#              capabilities: [gpu]
    
    cap_add:
      - SYS_ADMIN

    security_opt:
      - seccomp:unconfined

#    devices:
#      - "/dev/dri:/dev/dri"
      # For AMD GPU
      #- "/dev/kfd:/dev/kfd"
    
    volumes:
      - ./config/rclone:/etc/rclone
      # Workspace
      - ./workspace:${WORKSPACE:-/workspace}:rw
      # Will echo to root-owned authorized_keys file;
      # Avoids changing local file owner
#      - ./config/authorized_keys:/root/.ssh/authorized_keys_mount
      - ./config/provisioning/default.sh:/opt/ai-dock/bin/provisioning.sh
      # TLS Certificates
      - ./config/tls/server.crt:/opt/caddy/tls/container.crt
      - ./config/tls/server.key:/opt/caddy/tls/container.key
#      - /data/container-apps:/opt/apps
      - ./build/COPY_ROOT_0/opt/ai-dock/bin/supervisor-kasmvnc.sh:/opt/ai-dock/bin/supervisor-kasmvnc.sh
      - ./build/COPY_ROOT_0/opt/ai-dock/bin/supervisor-selkies-gstreamer.sh:/opt/ai-dock/bin/supervisor-selkies-gstreamer.sh
      - ./build/COPY_ROOT_0/opt/ai-dock/bin/supervisor-sshd.sh:/opt/ai-dock/bin/supervisor-sshd.sh
      - ./build/COPY_ROOT_0/opt/ai-dock/bin/supervisor-fcitx5.sh:/opt/ai-dock/bin/supervisor-fcitx5.sh
      - ./build/COPY_ROOT_0/opt/ai-dock/fastapi:/opt/ai-dock/fastapi

    # Magic bullet to solve networking issues - I don't like it
    # Turn server works fine both within local network and for internet
    network_mode: "host"

#    ports:
#        # SSH available on host machine port 2222 to avoid conflict. Change to suit
#        - ${SSH_PORT_HOST:-2222}:${SSH_PORT_HOST:-2222}
#        # Web UI for easy service access
#        - ${SERVICEPORTAL_PORT_HOST:-1111}:${SERVICEPORTAL_PORT_HOST:-1111}
#        # Coturn
##        - ${COTURN_PORT_HOST:-3478}:${COTURN_PORT_HOST:-3478}
#        # Selkies
#        - ${SELKIES_PORT_HOST:-6100}:${SELKIES_PORT_HOST:-6100}
#        # VNC
#        - ${VNC_PORT_HOST:-6200}:${VNC_PORT_HOST:-6200}
#        # Syncthing
#        - ${SYNCTHING_UI_PORT_HOST:-8384}:${SYNCTHING_UI_PORT_HOST:-8384}
#        - ${SYNCTHING_TRANSPORT_PORT_HOST:-22999}:${SYNCTHING_TRANSPORT_PORT_HOST:-22999}
   
    environment:
        # Don't enclose values in quotes
        # nvh264enc vah264enc x264enc
        SELKIES_ENCODER: ${SELKIES_ENCODER:-x264enc}
        SELKIES_ARGS: ${SELKIES_ARGS:-}
        PIPEWIRE_LATENCY: ${PIPEWIRE_LATENCY:-32/48000}
        PULSE_LATENCY_MSEC: ${PULSE_LATENCY_MSEC:-60}
        DIRECT_ADDRESS: ${DIRECT_ADDRESS:-127.0.0.1}
        DIRECT_ADDRESS_GET_WAN: ${DIRECT_ADDRESS_GET_WAN:-false}
        WORKSPACE: ${WORKSPACE:-/workspace}
        WORKSPACE_SYNC: ${WORKSPACE_SYNC:-true}
        CF_TUNNEL_TOKEN: ${CF_TUNNEL_TOKEN:-}
        CF_QUICK_TUNNELS: ${CF_QUICK_TUNNELS:-false}
        WEB_ENABLE_HTTPS: ${WEB_ENABLE_HTTPS:-true}
        WEB_ENABLE_AUTH: ${WEB_ENABLE_AUTH:-true}
        WEB_USER: ${WEB_USER:-user}
        WEB_PASSWORD: ${WEB_PASSWORD:-password}
        SSH_PORT_HOST: ${SSH_PORT_HOST:-2222}
        SERVICEPORTAL_PORT_HOST: ${SERVICEPORTAL_PORT_HOST:-1111}
        SERVICEPORTAL_METRICS_PORT: ${SERVICEPORTAL_METRICS_PORT:-21111}
        SERVICEPORTAL_URL: ${SERVICEPORTAL_URL:-https://127.0.0.1:1111}
        VNC_PORT_HOST: ${VNC_PORT_HOST:-6200}
        VNC_METRICS_PORT: ${VNC_METRICS_PORT:-26200}
        VNC_URL: ${VNC_URL:-https://127.0.0.1:6200}
        SELKIES_PORT_HOST: ${SELKIES_PORT_HOST:-6100}
        SELKIES_METRICS_PORT: ${SELKIES_METRICS_PORT:-26100}
        SELKIES_URL: ${SELKIES_URL:-https://127.0.0.1:6100}
        SERVERLESS: ${SERVERLESS:-false}
        SYNCTHING_UI_PORT_HOST: ${SYNCTHING_UI_PORT_HOST:-8384}
        SYNCTHING_TRANSPORT_PORT_HOST: ${SYNCTHING_TRANSPORT_PORT_HOST:-22999}
        SYNCTHING_URL: ${SYNCTHING_URL:-https://127.0.0.1:8384}
#        PROVISIONING_SCRIPT: ${PROVISIONING_SCRIPT:-}
        # Vast.ai KVM testing
#        VAST_TCP_PORT_1111: ${VAST_TCP_PORT_1111}
#        VAST_TCP_PORT_2222: ${VAST_TCP_PORT_2222}
#        VAST_TCP_PORT_6100: ${VAST_TCP_PORT_6100}
#        VAST_TCP_PORT_6200: ${VAST_TCP_PORT_6200}
#        VAST_TCP_PORT_8384: ${VAST_TCP_PORT_8384}
#        VAST_TCP_PORT_70000: ${VAST_TCP_PORT_70000}
#        VAST_TCP_PORT_72299: ${VAST_TCP_PORT_72299}

