version: "3.8"

x-setup-template: &setup-template
  image: ${IDEA_DOCKER_IMAGE}
  build:
    context: ./build
    args:
      IMAGE_BASE: ${IMAGE_BASE:-ubuntu:22.04}
  privileged: true
  volumes:
    - ${USERS_WORKSPACE}/config:/config:rw
    - ${CONFIG_BACKUP_PATH:-./addons/backups}:/backup
  environment:
    - USER_ID=${USER_ID}
    - GROUP_ID=${GROUP_ID}
  command: >
    bash -c '
      if [ "x${USERS_WORKSPACE}" == "x" ]; then
        echo "Set the USERS_WORKSPACE environment variable in the .env file";
        exit 1;
      fi;
      if [ ! -d /config/.config/JetBrains ]; then
        echo "Try restore idea config";
        sleep 1;
        if [ -f /backup/config-idea${IDEA_VERSION}-plugins.tar.bz2.0 ]; then
          cat /backup/config-idea${IDEA_VERSION}-plugins.tar.bz2.* > /backup/config-idea${IDEA_VERSION}-plugins.tar.bz2;
          tar -jxvf /backup/config-idea${IDEA_VERSION}-plugins.tar.bz2 -C /config --strip-components=1;
          rm -rf /backup/config-idea${IDEA_VERSION}-plugins.tar.bz2;
        elif [ -f /backup/config.tar.xz ]; then
          tar -Jxvf /backup/config.tar.xz -C /config;
        else
          echo "The config file not found"
        fi;
      fi;
      echo '' > /tmp/.config_restored
      until curl  -s -I http://idea-docker:5800 | grep -q "HTTP/1.1 200 OK"; do sleep 30; done;
      echo "All done!";
    '
  healthcheck:
    test: [ "CMD-SHELL", "[ -f /tmp/.config_restored ]" ]
    interval: 10s
    timeout: 5s
    retries: 120
    start_period: 3s

x-idea-docker-template: &idea-docker-template
  env_file:
    - .env
  image: ${IDEA_DOCKER_IMAGE}
  privileged: true
  restart: unless-stopped
  container_name: idea-docker
  shm_size: 2G

  ## For Nvidia GPU's - You probably want to uncomment this
  #    deploy:
  #      resources:
  #        reservations:
  #          devices:
  #            - driver: nvidia
  #              count: all
  #              capabilities: [gpu]

  cap_add:
    - SYS_ADMIN

  security_opt:
    - seccomp:unconfined
    - apparmor:unconfined

  devices:
    - "/dev/fuse"
    - "/dev/dri:/dev/dri"
    # For AMD GPU
    #- "/dev/kfd:/dev/kfd"

  ports:
    - "5900:5900"

  environment:
    SERVERLESS: ${SERVERLESS:-false}
    SSH_PORT_HOST: ${SSH_PORT_HOST:-2222}

  volumes:
    # Workspace
    - ${USERS_WORKSPACE}/config:${HOME}:rw
    - ${USERS_WORKSPACE}/projects:${IDEA_PROJECTS_HOME}:rw
    # Will echo to root-owned authorized_keys file;
    # Avoids changing local file owner
    - ./config/authorized_keys:/root/.ssh/authorized_keys_mount
    - ./config/provisioning/default.sh:/opt/ai-dock/bin/provisioning.sh:rw
    # TLS Certificates
    - ./config/tls/server.crt:/opt/caddy/tls/container.crt
    - ./config/tls/server.key:/opt/caddy/tls/container.key
    # Addons
    - ./addons:${XDG_ADDONS_HOME}:rw
    # Apps
    - /data/container-apps:${XDG_SOFTWARE_HOME}

services:
  setup:
    << : *setup-template

  idea-docker:
    << : *idea-docker-template
    depends_on:
      setup:
        condition: service_healthy
