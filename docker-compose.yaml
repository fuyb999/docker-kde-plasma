version: "3.8"
# Compose file build variables set in .env
services:
  supervisor:
    env_file:
      - .env
    build:
      context: ./build
      args:
        IMAGE_BASE: ${IMAGE_BASE:-fuyb/base-image:v2-cpu-22.04}
        XPU_TARGET: ${XPU_TARGET:-NVIDIA_GPU}
        XORG_ENABLED: ${XORG_ENABLED:-true}
        PLASMA_ENABLED: ${PLASMA_ENABLED:-false}
        PIPEWIRE_ENABLED: ${PIPEWIRE_ENABLED:-false}
        VIRTUALGL_ENABLED: ${VIRTUALGL_ENABLED:-true}
        SELKIES_ENABLED: ${SELKIES_ENABLED:-false}
        KASMVNC_ENABLED: ${KASMVNC_ENABLED:-false}
        TURBOVNC_ENABLED: ${TURBOVNC_ENABLED:-true}
        FIREFOX_ENABLED: ${FIREFOX_ENABLED:-false}
        SELKIES_VERSION: ${SELKIES_VERSION:-1.6.2}

    image: fuyb/docker-turbo:${IMAGE_TAG:-v2-22.04}
    privileged: true
    container_name: kde
#    entrypoint: tail -f /dev/null
    shm_size: 2G
    
    ## For Nvidia GPU's - You probably want to uncomment this
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              count: all
#              capabilities: [gpu]
    
    cap_add:
      - SYS_ADMIN

    security_opt:
      - seccomp:unconfined

    devices:
      - "/dev/dri:/dev/dri"
      # For AMD GPU
      #- "/dev/kfd:/dev/kfd"
    
    volumes:
      # Workspace
      - ./workspace:${WORKSPACE:-/home/develop}:rw
      # Will echo to root-owned authorized_keys file;
      # Avoids changing local file owner
      - ./config/authorized_keys:/root/.ssh/authorized_keys_mount
      - ./config/provisioning/default.sh:/opt/ai-dock/bin/provisioning.sh
      # TLS Certificates
      - ./config/tls/server.crt:/opt/caddy/tls/container.crt
      - ./config/tls/server.key:/opt/caddy/tls/container.key
      # Apps
      - /data/container-apps:/opt/apps
    ports:
      - "5900:5900"
    environment:
        SERVERLESS: ${SERVERLESS:-false}
        WORKSPACE: ${WORKSPACE:-/home/develop}
        SSH_PORT_HOST: ${SSH_PORT_HOST:-2222}
